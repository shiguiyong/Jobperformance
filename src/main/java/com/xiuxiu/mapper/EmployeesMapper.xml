<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiuxiu.mapper.EmployeesMapper" >
  <resultMap id="BaseResultMap" type="com.xiuxiu.pojo.Employees" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="present" property="present" jdbcType="DECIMAL" />
    <result column="reducepresent" property="reducepresent" jdbcType="DECIMAL" />
    <result column="performance" property="performance" jdbcType="DECIMAL" />
    <result column="performancepercent" property="performancepercent" jdbcType="DOUBLE" />
    <result column="yuperformance" property="yuperformance" jdbcType="DECIMAL" />
    <result column="basic" property="basic" jdbcType="DECIMAL" />
    <result column="addwork" property="addwork" jdbcType="DECIMAL" />
    <result column="openId" property="openid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, account, password, name, role, status, present, reducepresent, performance, performancepercent,
    yuperformance, basic, addwork, openId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xiuxiu.pojo.EmployeesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employees
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from employees
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employees
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiuxiu.pojo.EmployeesExample" >
    delete from employees
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiuxiu.pojo.Employees" >
    insert into employees (id, account, password,
      name, role, status,
      present, reducepresent, performance,
      performancepercent, yuperformance, basic,
      addwork, openId)
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR},
      #{present,jdbcType=DECIMAL}, #{reducepresent,jdbcType=DECIMAL}, #{performance,jdbcType=DECIMAL},
      #{performancepercent,jdbcType=DOUBLE}, #{yuperformance,jdbcType=DECIMAL}, #{basic,jdbcType=DECIMAL},
      #{addwork,jdbcType=DECIMAL}, #{openid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xiuxiu.pojo.Employees" >
    insert into employees
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="present != null" >
        present,
      </if>
      <if test="reducepresent != null" >
        reducepresent,
      </if>
      <if test="performance != null" >
        performance,
      </if>
      <if test="performancepercent != null" >
        performancepercent,
      </if>
      <if test="yuperformance != null" >
        yuperformance,
      </if>
      <if test="basic != null" >
        basic,
      </if>
      <if test="addwork != null" >
        addwork,
      </if>
      <if test="openid != null" >
        openId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="present != null" >
        #{present,jdbcType=DECIMAL},
      </if>
      <if test="reducepresent != null" >
        #{reducepresent,jdbcType=DECIMAL},
      </if>
      <if test="performance != null" >
        #{performance,jdbcType=DECIMAL},
      </if>
      <if test="performancepercent != null" >
        #{performancepercent,jdbcType=DOUBLE},
      </if>
      <if test="yuperformance != null" >
        #{yuperformance,jdbcType=DECIMAL},
      </if>
      <if test="basic != null" >
        #{basic,jdbcType=DECIMAL},
      </if>
      <if test="addwork != null" >
        #{addwork,jdbcType=DECIMAL},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiuxiu.pojo.EmployeesExample" resultType="java.lang.Integer" >
    select count(*) from employees
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update employees
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.role != null" >
        role = #{record.role,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.present != null" >
        present = #{record.present,jdbcType=DECIMAL},
      </if>
      <if test="record.reducepresent != null" >
        reducepresent = #{record.reducepresent,jdbcType=DECIMAL},
      </if>
      <if test="record.performance != null" >
        performance = #{record.performance,jdbcType=DECIMAL},
      </if>
      <if test="record.performancepercent != null" >
        performancepercent = #{record.performancepercent,jdbcType=DOUBLE},
      </if>
      <if test="record.yuperformance != null" >
        yuperformance = #{record.yuperformance,jdbcType=DECIMAL},
      </if>
      <if test="record.basic != null" >
        basic = #{record.basic,jdbcType=DECIMAL},
      </if>
      <if test="record.addwork != null" >
        addwork = #{record.addwork,jdbcType=DECIMAL},
      </if>
      <if test="record.openid != null" >
        openId = #{record.openid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update employees
    set id = #{record.id,jdbcType=INTEGER},
    account = #{record.account,jdbcType=VARCHAR},
    password = #{record.password,jdbcType=VARCHAR},
    name = #{record.name,jdbcType=VARCHAR},
    role = #{record.role,jdbcType=VARCHAR},
    status = #{record.status,jdbcType=VARCHAR},
    present = #{record.present,jdbcType=DECIMAL},
    reducepresent = #{record.reducepresent,jdbcType=DECIMAL},
    performance = #{record.performance,jdbcType=DECIMAL},
    performancepercent = #{record.performancepercent,jdbcType=DOUBLE},
    yuperformance = #{record.yuperformance,jdbcType=DECIMAL},
    basic = #{record.basic,jdbcType=DECIMAL},
    addwork = #{record.addwork,jdbcType=DECIMAL},
    openId = #{record.openid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiuxiu.pojo.Employees" >
    update employees
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="present != null" >
        present = #{present,jdbcType=DECIMAL},
      </if>
      <if test="reducepresent != null" >
        reducepresent = #{reducepresent,jdbcType=DECIMAL},
      </if>
      <if test="performance != null" >
        performance = #{performance,jdbcType=DECIMAL},
      </if>
      <if test="performancepercent != null" >
        performancepercent = #{performancepercent,jdbcType=DOUBLE},
      </if>
      <if test="yuperformance != null" >
        yuperformance = #{yuperformance,jdbcType=DECIMAL},
      </if>
      <if test="basic != null" >
        basic = #{basic,jdbcType=DECIMAL},
      </if>
      <if test="addwork != null" >
        addwork = #{addwork,jdbcType=DECIMAL},
      </if>
      <if test="openid != null" >
        openId = #{openid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiuxiu.pojo.Employees" >
    update employees
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      present = #{present,jdbcType=DECIMAL},
      reducepresent = #{reducepresent,jdbcType=DECIMAL},
      performance = #{performance,jdbcType=DECIMAL},
      performancepercent = #{performancepercent,jdbcType=DOUBLE},
      yuperformance = #{yuperformance,jdbcType=DECIMAL},
      basic = #{basic,jdbcType=DECIMAL},
      addwork = #{addwork,jdbcType=DECIMAL},
      openId = #{openid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="empsheet" resultType="com.xiuxiu.pojo.Employees">
    select * from  employees
    <where>
      <if test="emp.id !=null and emp.id ！=''">
        id= ${emp.id}
      </if>
      <if test="emp.name !=null and emp.name ！=''">
        and name= ${emp.name}
      </if>
    </where>
        order by id ASC
  </select>
</mapper>